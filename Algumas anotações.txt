//Código de Cadastro de Usuário com dados fixos
===========================================================================

require('cypress-xpath');


describe('Cadastrar Usuário Teste Test Suite', () => {
    beforeEach(() => {
        cy.visit('https://front.serverest.dev/login');
    });

    it('Clica no botão Cadastre-se e depois Cadastrar', () => {
        cy.xpath("//a[contains(text(),'Cadastre-se')]").click();

        //Entra com os dados do usuário
        cy.xpath('//input[@id="nome"]').type('Usuário Teste');
        cy.xpath('//input[@id="email"]').type('usuarioteste@teste.com.br');
        cy.xpath('//input[@id="password"]').type('teste123');
        cy.xpath('//input[@id="administrador"]').click();
        cy.xpath("//button[contains(text(),'Cadastrar')]").click();

        //Verifica se o usuário foi cadastrado com sucesso
        cy.xpath('//font[contains(text(),"Bem Vindo")]').should('contain', 'Login');

        //Sai do sistema
        cy.xpath("//font[contains(text(),'Sair')]").click();

       
    });
    
})

===========================================================================
//Código de Cadastro de Usuário com dados aleatórios
===========================================================================


function generateRandomUser() {
    const randomString = Math.random().toString(36).substring(2, 10);
    const name = `User_${randomString}`;
    const email = `user_${randomString}@test.com`;
    const password = `pass_${randomString}`;
    return { name, email, password };
}

describe('Cadastrar Usuário Teste Test Suite', () => {
    beforeEach(() => {
        cy.visit('https://front.serverest.dev/login');
    });

    it('Clica no botão Cadastre-se e depois Cadastrar', () => {
        const user = generateRandomUser();

        cy.xpath("//a[contains(text(),'Cadastre-se')]").click();

        // Entra com os dados do usuário
        cy.xpath('//input[@id="nome"]').type(user.name);
        cy.xpath('//input[@id="email"]').type(user.email);
        cy.xpath('//input[@id="password"]').type(user.password);
        cy.xpath('//input[@id="administrador"]').click();
        cy.xpath("//button[contains(text(),'Cadastrar')]").click();

        // Verifica se o usuário foi cadastrado com sucesso
        cy.xpath('//font[contains(text(),"Bem Vindo")]').should('contain', 'Login');

        // Sai do sistema
        cy.xpath("//font[contains(text(),'Sair')]").click();
    });
});

===========================================================================
    Subindo o Projeto no GitHub
===========================================================================

# Para incializar e subir o Projeto no GitHub
git remote add origin https://github.com/jjvilar/AmbevTech---Omnia-GTH.git
git branch -M main
git push -u origin main

--------------------------------------
# Se houver algun conflito faça:
# Forçar o push (use com cuidado)
git push -f origin main

# Ou fazer um pull e resolver conflitos
git pull origin main --rebase
---------------------------------------

# Resolva os conflitos, se houver
git add .
git commit -m "Resolvendo conflitos de merge "
git push origin main

===========================================================================
    Subindo atualizações
===========================================================================

# Verificar se há alterações locais não commitadas
git status

# Commitar alterações locais (se houver)
git add .
git commit -m "Sua mensagem de commit"

# Buscar atualizações do repositório remoto
git fetch

# Verificar o status em relação ao repositório remoto
git status

# Verificar o log de commits que estão no remoto e não no local
git log HEAD..origin/main --oneline

# Atualizar o repositório local com as mudanças do remoto
git pull origin main --rebase

# Resolver conflitos (se houver)
# Resolva os conflitos manualmente, depois:
git add .
git commit -m "Resolve merge conflicts"

# Enviar suas mudanças para o repositório remoto
git push origin main



